// This code was generated by scripts/BindingGenerator.py
// Do not modify it, modify and run the generator instead.

#pragma once

#include <string>
#include <unordered_set>
#include "IrrCompileConfig.h" // for IRRLICHT_API
#include "IContextManager.h"
#include <KHR/khrplatform.h>

#ifndef APIENTRY
	#define APIENTRY KHRONOS_APIENTRY
#endif
#ifndef APIENTRYP
	#define APIENTRYP APIENTRY *
#endif
// undefine a few names that can easily clash with system headers
#ifdef NO_ERROR
#undef NO_ERROR
#endif
#ifdef ZERO
#undef ZERO
#endif
#ifdef ONE
#undef ONE
#endif
#ifdef TRUE
#undef TRUE
#endif
#ifdef FALSE
#undef FALSE
#endif
#ifdef DIFFERENCE
#undef DIFFERENCE
#endif
#ifdef WAIT_FAILED
#undef WAIT_FAILED
#endif

class OpenGLProcedures final {
private:
	// ${source_xml}
${typedefs}

${function_typedefs}
	std::unordered_set<std::string> extensions;

public:
	// Call this once after creating the context.
	void LoadAllProcedures(irr::video::IContextManager *cmgr);
	/// Check if an extension is supported.
	/// @param ext full extension name e.g. "GL_KHR_no_error"
	inline bool IsExtensionPresent(const std::string &ext) const
	{
		return extensions.count(ext) > 0;
	}

${function_pointers}


${constants}
};

// Global GL procedures object.
IRRLICHT_API extern OpenGLProcedures GL;
