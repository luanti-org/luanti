// This code was generated by scripts/BindingGenerator.py
// Do not modify it, modify and run the generator instead.

#include "mt_opengl.h"
#include <string>
#include <sstream>

OpenGLProcedures GL;

void OpenGLProcedures::LoadAllProcedures(irr::video::IContextManager *cmgr)
{

${pointers_load}
	/* OpenGL 3 & ES 3 way to enumerate extensions */
	GLint ext_count = 0;
	GetIntegerv(NUM_EXTENSIONS, &ext_count);
	// clear error which is raised if unsupported
	while (GetError() != GL.NO_ERROR) {}
	extensions.reserve(ext_count);
	for (GLint k = 0; k < ext_count; k++) {
		auto tmp = GetStringi(EXTENSIONS, k);
		if (tmp)
			extensions.emplace((char*)tmp);
	}
	if (!extensions.empty())
		return;

	/* OpenGL 2 / ES 2 way to enumerate extensions */
	auto ext_str = GetString(EXTENSIONS);
	if (!ext_str)
		return;
	// get the extension string, chop it up
	std::istringstream ext_ss((char*)ext_str);
	std::string tmp;
	while (std::getline(ext_ss, tmp, ' '))
		extensions.emplace(tmp);
}
